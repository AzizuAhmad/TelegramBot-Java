/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tes1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

/**
 *
 * @author Acer
 */
public class frmDataMember extends javax.swing.JFrame {

    /**
     * Creates new form frmTelegram
     *
     */
    Connection Con;
    ResultSet RsMember;
    Statement stm;
    Long tempId_member;
    private Object[][] dataMember = null;
    private String[] header
            = {"Id Telegram", "Username"};

    public frmDataMember() {
        initComponents();
        open_db();
        baca_data();
        baca_member();
    }

    public void BasicBot() {
        try {
            TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);
            botsApi.registerBot(new simpleBot(this));
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMember = new javax.swing.JTable();
        btnRefreshMember = new javax.swing.JButton();
        cmbMember = new javax.swing.JComboBox<>();
        txtUserDB = new javax.swing.JTextField();
        btnClean2 = new javax.swing.JButton();
        btnHps2 = new javax.swing.JButton();
        brnRefresh2 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnKeluar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Kelola Member");

        jLabel2.setText("Username");

        jLabel3.setText("ID Telegram");

        jLabel4.setText("Data Member");

        tblMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID  Telegram", "Username"
            }
        ));
        jScrollPane1.setViewportView(tblMember);

        btnRefreshMember.setText("Refresh");
        btnRefreshMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshMemberActionPerformed(evt);
            }
        });

        cmbMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMemberActionPerformed(evt);
            }
        });

        txtUserDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserDBActionPerformed(evt);
            }
        });

        btnClean2.setText("Clean");
        btnClean2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClean2ActionPerformed(evt);
            }
        });

        btnHps2.setText("Hapus");
        btnHps2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHps2ActionPerformed(evt);
            }
        });

        brnRefresh2.setText("Refresh");
        brnRefresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnRefresh2ActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addComponent(txtUserDB, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKeluar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBack))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRefreshMember)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(84, 84, 84)
                                    .addComponent(cmbMember, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnClean2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnHps2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(brnRefresh2))))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUserDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClean2)
                    .addComponent(btnHps2)
                    .addComponent(brnRefresh2))
                .addGap(38, 38, 38)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefreshMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnKeluar))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshMemberActionPerformed
        // TODO add your handling code here:
        baca_data();
    }//GEN-LAST:event_btnRefreshMemberActionPerformed

    private void cmbMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMemberActionPerformed
//         TODO add your handling code here:

        Object selectedValue = cmbMember.getSelectedItem();
        String temp;
        temp = selectedValue.toString();
        tempId_member = Long.parseLong(temp);

        cmbMember.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Update the auto-input field when the primary field's value changes
//                String primaryValue = cmbKd_Brg.getText();
                detil_member(tempId_member);
//                baca_data();
            }
        });


    }//GEN-LAST:event_cmbMemberActionPerformed

    private void btnClean2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClean2ActionPerformed
        // TODO add your handling code here:
        txtUserDB.setText("");
    }//GEN-LAST:event_btnClean2ActionPerformed

    private void btnHps2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHps2ActionPerformed
        // TODO add your handling code here:
        try {
            Object selectedValue = cmbMember.getSelectedItem();
            String temp = selectedValue.toString();
            String sql1 = "delete from logpesan where id_member='" + temp + "'";
            String sql = "delete from member where id_member='" + temp + "'";
            stm.executeUpdate(sql1);
            stm.executeUpdate(sql);
            cmbMember.removeItem(temp);
            txtUserDB.setText("");
            baca_data();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnHps2ActionPerformed

    private void brnRefresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnRefresh2ActionPerformed
        // TODO add your handling code here:
        Object selectedValue = cmbMember.getSelectedItem();
        String temp;
        temp = selectedValue.toString();
        tempId_member = Long.parseLong(temp);
        refresh_member(tempId_member);
    }//GEN-LAST:event_brnRefresh2ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new frmMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtUserDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserDBActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        new LoginAdmin().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDataMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDataMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDataMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDataMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        frmDataMember frmDM = new frmDataMember();
        frmDM.BasicBot();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDataMember().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnRefresh2;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClean2;
    private javax.swing.JButton btnHps2;
    private javax.swing.JToggleButton btnKeluar;
    private javax.swing.JButton btnRefreshMember;
    private static javax.swing.JComboBox<String> cmbMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMember;
    private javax.swing.JTextField txtUserDB;
    // End of variables declaration//GEN-END:variables

    private void open_db() {
        try {
            Koneksi kon = new Koneksi("localhost", "root", "", "bot");
            Con = kon.getConnection();
//            System.err.println("berhasil");
        } catch (Exception e) {
            System.err.println("Eror : " + e);
        }
    }

    private void baca_data() {
        try {
            stm = Con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            RsMember = stm.executeQuery("select * from member");
            ResultSetMetaData meta = RsMember.getMetaData();
            int col = meta.getColumnCount();
            int baris = 0;
            while (RsMember.next()) {
                baris = RsMember.getRow();
            }
            dataMember = new Object[baris][col];
            int x = 0;
            RsMember.beforeFirst();
            while (RsMember.next()) {
                dataMember[x][0] = RsMember.getLong("id_member");
                dataMember[x][1] = RsMember.getString("username");
                x++;
            }
            tblMember.setModel(new DefaultTableModel(dataMember, header));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void baca_member() {
        try {

            stm = Con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            RsMember = stm.executeQuery("select * from member");
            RsMember.beforeFirst();
            while (RsMember.next()) {
                Long tempid = RsMember.getLong("id_member");
                String temp = String.valueOf(tempid);
                cmbMember.addItem(temp);
            }
            RsMember.close();
        } catch (Exception e) {
            System.out.println("Error : " + e);
        }
    }

    private void refresh_member(Long id) {
        try {
            stm = Con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            RsMember = stm.executeQuery("select * from member");
            RsMember.beforeFirst();
            while (RsMember.next()) {
                Long tempid = RsMember.getLong("id_member");
                if (!id.equals(tempid)) {
                    String temp = String.valueOf(tempid);
                    cmbMember.addItem(temp);
                    break;
                }
            }
//            simpan_ditabel();
            RsMember.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void detil_member(Long idMember) {
        try {
            stm = Con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            RsMember = stm.executeQuery("select * from member where id_member =" + idMember + "  ");
            RsMember.beforeFirst();
            while (RsMember.next()) {
                txtUserDB.setText(RsMember.getString(2).trim());
            }
            RsMember.close();
        } catch (Exception e) {
            System.out.println("Error : " + e);

        }
    }

}
